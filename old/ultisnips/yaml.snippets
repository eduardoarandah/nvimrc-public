# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet tmuxp ".tmuxp.yml example"
session_name: ${1:proyecto}

# commands to run in every pane
shell_command_before: 
  - alias dc="docker-compose"
  - alias dce="docker-compose exec"
  - alias web='docker-compose exec web'
  - alias db='docker-compose exec db mysql -u root -pasdf'
  - alias wp='docker run -it --rm -v ${PWD}:/app -w /app --network localhost wordpress:cli-php7.4' 
  - alias co='docker run -it --rm -v ${PWD}:/app composer:1'                                          
  - alias node='docker run -it --rm -v ${PWD}:/app -w /app node:14'                                          
  - alias ya='docker run -it --rm -v ${PWD}:/app -w /app --network localhost -p 3000:3000 node:14 yarn'                                          

windows:

  - window_name: servers
    layout: tiled # tiled main-vertical main-horizontal
    panes:
      - docker-compose up
      - co install

  - window_name: editor
    panes: 
      - shell_command:
          - cd web/app/themes/$1/
          - nvim
      - shell_command:
          - open http://$1.localhost
          - cd web/app/themes/$1/
          - co install
          - ya
          - ya:build
          - ya start
endsnippet

snippet tmuxinatornew "tmuxinator" 
# run: tmuxinator start -p .tmuxinator.yml
name: $1

# Runs on project start, always
# on_project_start: docker-compose up -d
# on_project_exit: docker-compose down &

# Runs in each window and pane before window/pane specific commands. Useful for setting up interpreter versions.
pre_window:
  - nvm use 16
  - source init.sh

# Specifies (by name or index) which window will be selected on project startup. If not set, the first window is used.
startup_window: editor 

windows:
  - server:
      layout: tiled # even-horizontal, even-vertical, main-horizontal, main-vertical, or tiled
      panes: 
        - pane1:
          - cd public
          - wp core version
        - pane2:
          - open http://alimerka.localhost/
          - open http://localhost:3000
  - watchers: 
      layout: tiled # even-horizontal, even-vertical, main-horizontal, main-vertical, or tiled
      panes: 
        - pane1:
          - cd ./public/wp-content/themes/alimerka/
          - composer install
        - pane2:
          - cd ./public/wp-content/themes/alimerka/
          - yarn
          - yarn build
          - yarn start
  - editor: 
      - cd ./public/wp-content/themes/alimerka/
      - $EDITOR
endsnippet


snippet tmuxinatorlayout "tmuxinator layout" 

  - server:
      layout: tiled # even-horizontal, even-vertical, main-horizontal, main-vertical, or tiled
      panes: 
        - pane1:
          - \$EDITOR
          - yarn dev
        - pane2:
          - open http://localhost:8080
endsnippet

snippet tmuxinatorpane "tmuxinator pane"
  - watchers: 
      - echo "Commands one after another"
      - $EDITOR
endsnippet
