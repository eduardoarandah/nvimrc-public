priority -50

###########################################################################
#                            SnipMate Snippets                            #
###########################################################################
snippet gvar "Global / configuration variable" b
if !exists("g:${1:MyUltraImportantVar}")
	let g:$1 = ${2:"${3:<tab>}"}
endif
endsnippet

snippet guard "script reload guard" b
if exists('${1:did_`!p snip.rv = snip.fn.replace('.','_')`}') || &cp${2: || version < 700}
	finish
endif
let $1 = 1$3
endsnippet

snippet fun "function" b 
function! ${1:FunctionName}() 
	" Preparation: save last search, and cursor position.
	let _s=@/
	let l = line(".")
	let c = col(".") 
	" do the business:
	$0
	" clean up: restore previous search history, and cursor position
	let @/=_s
	call cursor(l, c) 

	" alternative: call command, and save position 
	let save_pos = getpos(".")
	call setpos('.', save_pos)

	" execute silently
	silent! %! prettier --stdin --parser=scss

endfunction 
command! $1 :call $1() 
:autocmd BufWritePre *.scss :call $1()
endsnippet
# vim:ft=snippets: 

snippet autocmd "Autocmd"
" Prevent duplicating commands if resourcing
augroup filetype_html
	" Clear previous commands
	autocmd!
	" Set new command
	autocmd FileType html nnoremap <buffer> <localleader>f Vatzf
augroup END
endsnippet 

snippet .vimrccwd ".vimrc to change tools but not working directory"
nnoremap <c-p> :Files ${1:wp-content/themes/xxx}<cr>
NERDTree
NERDTree $1
endsnippet
